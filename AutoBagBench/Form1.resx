<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timerClock.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>68</value>
  </metadata>
</root>